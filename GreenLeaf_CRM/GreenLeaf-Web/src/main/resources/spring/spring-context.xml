<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="false">

	<!-- <import resource="spring-jms.xml" /> -->
	<!-- <import resource="spring-memcache.xml" /> -->
	<import resource="spring-mybatis.xml" />

	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />
	<!-- 设置使用注解的类所在的包 -->
	<context:component-scan base-package="com.greenleaf.crm">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 初始化上下文工具类 -->
	<bean id="applicationContextUtil" class="com.greenleaf.common.context.ApplicationContextUtil"></bean>

	<!-- aop动态代理(强制使用CGLIB) -->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

	<!-- 扫描所有类路径下的所有的配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:conf/server_cfg.properties</value>
			</list>
		</property>
	</bean>

	<!-- 读取properties文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds">
			<!-- 设置自动刷新时间，以秒为单位 -->
			<value>86400</value>
		</property>
		<property name="basenames">
			<list>
				<value>classpath:conf/i18n/message</value>
			</list>
		</property>
	</bean>

	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 数据库驱动包 -->
		<property name="driverClass" value="${mysql.driverClass}" />
		<!-- 数据库连接地址 -->
		<property name="jdbcUrl" value="${mysql.jdbcUrl}" />
		<property name="user" value="${mysql.user}" />
		<property name="password" value="${mysql.password}" />
		<!-- 指定连接池里最小连接数 -->
		<property name="minPoolSize" value="${mysql.minPoolSize}" />
		<!-- 指定连接池里最大连接数 -->
		<property name="maxPoolSize" value="${mysql.maxPoolSize}" />
		<!-- 连接最大空闲时间，超过时间将被丢弃,单位是秒 -->
		<property name="maxIdleTime" value="${mysql.maxIdleTime}" />
		<!-- 当连接池里面的连接用完的时候，C3P0一次获取的新的连接数 -->
		<property name="acquireIncrement" value="${mysql.acquireIncrement}" />
		<!-- 指定连接池里最大缓存多少个Statement对象 -->
		<property name="maxStatements" value="${mysql.maxStatements}" />
		<!-- 初始创建连接的数量 -->
		<property name="initialPoolSize" value="${mysql.initialPoolSize}" />
		<!-- 每隔XX秒检查连接池里的空闲连接 ，单位是秒 -->
		<property name="idleConnectionTestPeriod" value="${mysql.idleConnectionTestPeriod}" />
		<property name="checkoutTimeout" value="1000" />
	</bean>

	<!-- 定义事务管理器（声明式的事务） -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" rollback-for="java.lang.Exception" />
			<tx:method name="add*" rollback-for="java.lang.Exception" />
			<tx:method name="update*" rollback-for="java.lang.Exception" />
			<!-- 虽然与save*重复,显式声明 -->
			<tx:method name="saveOrUpdate*" rollback-for="java.lang.Exception" />
			<tx:method name="del*" rollback-for="java.lang.Exception" />
			<!-- 虽然与del*重复,显式声明 -->
			<tx:method name="delete*" rollback-for="java.lang.Exception" />
			<tx:method name="cancel*" rollback-for="java.lang.Exception" />
			<tx:method name="callBack*" rollback-for="java.lang.Exception" />
			<tx:method name="set*" rollback-for="java.lang.Exception" />
			<tx:method name="do*" rollback-for="java.lang.Exception" />
			<tx:method name="off*" rollback-for="java.lang.Exception" />
			<!-- 以下方法开头只查询无事务 -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="interceptorPointCuts"
			expression="execution(* com.greenleaf.crm.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />
	</aop:config>
</beans>
